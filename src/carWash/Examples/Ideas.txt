Time & date discount solutions:

    1:
    import time&date
        @Override - ability to test program

    2:
    if (!weekend && time < 14:00) {
        return true;
        }




    /**
     * Prints a menu with any amount of menu options.
     * @param menuNameString name of the menu as *****Menu name*****.
     * @param menuOptions Variable length argument for options, self-numbered.
     * <p>
     * Example:
     * <p>
     * {@code Design.printMenu("Wash Menu", "Economy Wash", "Standard Wash", "De Luxe Wash", "Exit to main menu");}
     */
    public static void printMenu(String menuNameString, String ... menuOptions){
        System.out.println(headline());
        System.out.println(menuBars());
        System.out.println("*****" + menuNameString + "*****");
        if (menuOptions.length > 0) {
            for (int i = 0; i < menuOptions.length; i++) {
                System.out.println(i+1 + ". " + menuOptions[i]);
            }
        }
        System.out.println(menuBars());
    }
example

Design.printMenu(
            "Wash Menu",
            "Economy Wash",
            "Standard Wash",
            "De Luxe Wash",
            "Exit to main menu"




    public int getEconomy(int discountPercentage) {
        if (this.isDiscountAvailable(timestamp())) {
            return (int) (this.economy * (100 - discountPercentage / 100));
        }
        return this.economy;
    }

        public int getStandard(int discountPercentage) {
            this.discountPercentage = discountPercentage;
            if (this.isDiscountAvailable(timestamp())) {
                return (int) (this.standard * (100 - discountPercentage / 100));
            }
            return this.standard;
        }



        ///////////////////
       public static void firstMenu() {
            try {
                firstMenuOptions();
                switch (UserInput.intIn.nextInt()) {
                    case 1:
                        CW.newLine();
                        Price.printTimeAndDate();
                        CW.newLine();
                        // Time and date function
                        // print current time and date
                        mainMenu();
                        break;
                    case 2:
                       /* CW.newLine();
                        Checkout c = new Checkout();
                        c.printPrice(); */
                        //Remove cause useless?? - Ain't written in assignment.
                        // User Specified time and date function
                        // specify time
                        mainMenu();
                        break;
                    case 3:
                        CW.newLine();
                        CW.print(CW.exitSystemMsg());
                        System.exit(0);
                        break;
                    default:
                        CW.newLine();
                        CW.print(CW.defaultMenuMsg());
                        firstMenu();
                        break;
                }
            } catch (InputMismatchException e) {
                CW.newLine();
                CW.print(CW.inputMismatchExceptionMsg());
                UserInput.intIn.next();
                CW.newLine();
                firstMenu();
            }
            CW.newLine();
        }